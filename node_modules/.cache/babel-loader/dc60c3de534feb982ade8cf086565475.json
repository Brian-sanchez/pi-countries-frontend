{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cosas de Programacion\\\\Proyectos de Programacion\\\\Proyectos SoyHenry\\\\PI para hacer si o si henry\\\\Pi-countries 3\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\Pagination.jsx\";\n//Aqui vamos  a hacer el indice de paginas.\nimport React from \"react\";\nimport style from \"./styles/Pagination.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    countriesPerPage,\n    countries,\n    paged\n  } = _ref;\n  const pageNumbers = [];\n  const pageQuantity = Math.ceil(countries.length / countriesPerPage); // calculo la cantidad de p치ginas que voy a tener en funci칩n de la cantidad de paises\n\n  for (let i = 1; i < pageQuantity + 1; i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.pagedContainer,\n      children: pageNumbers === null || pageNumbers === void 0 ? void 0 : pageNumbers.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => paged(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/Cosas de Programacion/Proyectos de Programacion/Proyectos SoyHenry/PI para hacer si o si henry/Pi-countries 3/PI-Countries-main/client/src/components/Pagination.jsx"],"names":["React","style","Pagination","countriesPerPage","countries","paged","pageNumbers","pageQuantity","Math","ceil","length","i","push","pagedContainer","map","number"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gCAAlB;;;AAEA,MAAMC,UAAU,GAAG,QAA4C;AAAA,MAA3C;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,GAA2C;AAC3D,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUL,SAAS,CAACM,MAAV,GAAmBP,gBAA7B,CAArB,CAF2D,CAEU;;AACrE,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,YAAY,GAAG,CAAnC,EAAsCI,CAAC,EAAvC,EAA2C;AACvCL,IAAAA,WAAW,CAACM,IAAZ,CAAiBD,CAAjB;AACP;;AACD,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAEV,KAAK,CAACY,cAAtB;AAAA,gBACKP,WADL,aACKA,WADL,uBACKA,WAAW,CAAEQ,GAAb,CAAkBC,MAAD,IAAY;AAC9B,4BACI;AAAA,iCACA;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,OAAO,EAAE,MAAMV,KAAK,CAACU,MAAD,CAA5C;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADA,WAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOC,OARA;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeC,CArBD;;KAAMb,U;AAuBN,eAAeA,UAAf","sourcesContent":["//Aqui vamos  a hacer el indice de paginas.\r\nimport React from \"react\";\r\n\r\nimport style from \"./styles/Pagination.module.css\";\r\n\r\nconst Pagination = ({ countriesPerPage, countries, paged }) => {\r\n    const pageNumbers = [];\r\n    const pageQuantity = Math.ceil(countries.length / countriesPerPage); // calculo la cantidad de p치ginas que voy a tener en funci칩n de la cantidad de paises\r\n    for (let i = 1; i < pageQuantity + 1; i++) {\r\n        pageNumbers.push(i);\r\n}\r\nreturn (\r\n    <nav>\r\n    <div className={style.pagedContainer}>\r\n        {pageNumbers?.map((number) => {\r\n        return (\r\n            <div key={number}>\r\n            <button className=\"btn\" onClick={() => paged(number)}>\r\n                {number}\r\n            </button>\r\n            </div>\r\n        );\r\n        })}\r\n    </div>\r\n    </nav>\r\n);\r\n};\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}