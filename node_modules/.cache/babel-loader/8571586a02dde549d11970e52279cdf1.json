{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cosas de Programacion\\\\SoyHenry\\\\SoyHenry\\\\PI 2\\\\PI-Countries\\\\client\\\\src\\\\components\\\\Pagination.jsx\";\n//Aqui vamos  a hacer el indice de paginas.\nimport React from \"react\";\nimport style from \"./styles/Pagination.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    countriesPerPage,\n    countries,\n    currentPage,\n    paged\n  } = _ref;\n  const pageNumbers = [];\n  const pageQuantity = Math.ceil(countries.length / countriesPerPage); // calculo la cantidad de p치ginas que voy a tener en funci칩n de la cantidad de paises\n\n  for (let i = 1; i < pageQuantity + 1; i++) {\n    pageNumbers.push(i);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: style.container,\n        children: pageNumbers === null || pageNumbers === void 0 ? void 0 : pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: style.number,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: currentPage === number ? style.crumb_active : style.crumb,\n            onClick: () => paged(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/Cosas de Programacion/SoyHenry/SoyHenry/PI 2/PI-Countries/client/src/components/Pagination.jsx"],"names":["React","style","Pagination","countriesPerPage","countries","currentPage","paged","pageNumbers","pageQuantity","Math","ceil","length","i","push","container","map","number","crumb_active","crumb"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gCAAlB;;;AAEA,MAAMC,UAAU,GAAG,QAAyD;AAAA,MAAxD;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA,WAA/B;AAA4CC,IAAAA;AAA5C,GAAwD;AACxE,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUN,SAAS,CAACO,MAAV,GAAmBR,gBAA7B,CAArB,CAFwE,CAEH;;AAErE,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,YAAY,GAAG,CAAnC,EAAsCI,CAAC,EAAvC,EAA2C;AACvCL,IAAAA,WAAW,CAACM,IAAZ,CAAiBD,CAAjB;AACH;;AAAA;AAED,sBACI;AAAA,2BACA;AAAA,6BACE;AAAI,QAAA,SAAS,EAAEX,KAAK,CAACa,SAArB;AAAA,kBACGP,WADH,aACGA,WADH,uBACGA,WAAW,CAAEQ,GAAb,CAAkBC,MAAD,iBAChB;AAAiB,UAAA,SAAS,EAAEf,KAAK,CAACe,MAAlC;AAAA,iCACE;AACE,YAAA,SAAS,EACPX,WAAW,KAAKW,MAAhB,GAAyBf,KAAK,CAACgB,YAA/B,GAA8ChB,KAAK,CAACiB,KAFxD;AAIE,YAAA,OAAO,EAAE,MAAMZ,KAAK,CAACU,MAAD,CAJtB;AAAA,sBAMGA;AANH;AAAA;AAAA;AAAA;AAAA;AADF,WAASA,MAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5BD;;KAAMd,U;AA8BN,eAAeA,UAAf","sourcesContent":["//Aqui vamos  a hacer el indice de paginas.\r\nimport React from \"react\";\r\n\r\nimport style from \"./styles/Pagination.module.css\";\r\n\r\nconst Pagination = ({ countriesPerPage, countries, currentPage, paged }) => {\r\n    const pageNumbers = [];\r\n    const pageQuantity = Math.ceil(countries.length / countriesPerPage); // calculo la cantidad de p치ginas que voy a tener en funci칩n de la cantidad de paises\r\n    \r\n    for (let i = 1; i < pageQuantity + 1; i++) {\r\n        pageNumbers.push(i);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <nav>\r\n          <ul className={style.container}>\r\n            {pageNumbers?.map((number) => (\r\n              <li key={number} className={style.number}>\r\n                <div\r\n                  className={\r\n                    currentPage === number ? style.crumb_active : style.crumb\r\n                  }\r\n                  onClick={() => paged(number)}\r\n                >\r\n                  {number}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}